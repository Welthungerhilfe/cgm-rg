# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '01d8e191-0132-47ae-bec0-cbdcf8e96a09'
  imageRepository: 'cgmresultgeneration'
  dockerId: 'cgmrgtest'
  containerRegistry: 'cgmrgtest.azurecr.io'
  dockerfilePath: 'Dockerfile.build'
  tag: '$(Build.BuildId)'
  buildConfiguration: 'BuildAndTest'  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'


# Build Docker image for this app, to be published to Docker Registry
pool:
  vmImage: $(vmImageName)

steps:
- script: docker build -f $(dockerfilePath) -t $(dockerId)/build:$(tag) .
  displayName: 'Build'
- bash: |
    docker run --name test -d $(dockerId)/build:$(tag)
    docker ps -q --filter="name={test}"
    docker cp test:/app/test-output.xml $(System.DefaultWorkingDirectory)
    docker ps -a
  displayName: 'Copy'
- script: docker stop test
  displayName: 'Stop'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
    testResultsFiles: '**/test-output.xml' 
    #searchFolder: '$(System.DefaultWorkingDirectory)' # Optional
    #mergeTestResults: false # Optional
    failTaskOnFailedTests: true # Optional
    #testRunTitle: # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    #publishRunAttachments: true # Optional

# Publish code coverage results
# Publish Cobertura or JaCoCo code coverage results from a build
#- task: PublishCodeCoverageResults@1
#  inputs:
#    #codeCoverageTool: 'JaCoCo' # Options: cobertura, jaCoCo
#    summaryFileLocation: coverage.xml
#    #pathToSources: # Optional
#    #reportDirectory: # Optional
#    #additionalCodeCoverageFiles: # Optional
#    failIfCoverageEmpty: true # Optional
